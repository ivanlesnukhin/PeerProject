/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 19 12:16:59 GMT 2019
 */

package myRobot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import myRobot.LinearTargeting;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import robocode.AdvancedRobot;
import robocode.Bullet;
import robocode.ScannedRobotEvent;
import robocode.robotinterfaces.peer.IBasicRobotPeer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinearTargeting_ESTest extends LinearTargeting_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      Bullet bullet0 = new Bullet((-1411.0), 2538.967835276766, 376.2626513868509, 1.2, "G#C", "", true, 2146843058);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(bullet0).when(iBasicRobotPeer0).setFire(anyDouble());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      linearTargeting0.setFire(0.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinearTargeting linearTargeting0 = new LinearTargeting((AdvancedRobot) null);
      // Undeclared exception!
      try { 
        linearTargeting0.setTurnRadarRightRadians((-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("myRobot.LinearTargeting", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      // Undeclared exception!
      try { 
        linearTargeting0.setTurnRadarRightRadians((-18.0));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$1757187836 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinearTargeting linearTargeting0 = new LinearTargeting((AdvancedRobot) null);
      // Undeclared exception!
      try { 
        linearTargeting0.setTurnGunRightRadians(520.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("myRobot.LinearTargeting", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      // Undeclared exception!
      try { 
        linearTargeting0.setTurnGunRightRadians((-3123.0));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$1757187836 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinearTargeting linearTargeting0 = new LinearTargeting((AdvancedRobot) null);
      // Undeclared exception!
      try { 
        linearTargeting0.setFire(20.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("myRobot.LinearTargeting", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getEnergy() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinearTargeting linearTargeting0 = new LinearTargeting((AdvancedRobot) null);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", 0.0, (-719.5067331933377), 0.0, 1285.1147094600815, 0.0);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("myRobot.LinearTargeting", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      // Undeclared exception!
      try { 
        linearTargeting0.setFire(0.0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the setFire() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      // Undeclared exception!
      try { 
        linearTargeting0.setTurnGunRightRadians((-3123.0));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the setTurnGunRightRadians() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(2076.97740497533).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(2076.97740497533).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn(1351.18094).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(2076.97740497533, 2076.97740497533).when(iBasicRobotPeer0).getEnergy();
      doReturn(2076.97740497533).when(iBasicRobotPeer0).getGunHeading();
      doReturn(338.871427393813, 1351.18094, 338.871427393813).when(iBasicRobotPeer0).getX();
      doReturn(2076.97740497533, (-1787.10537), 2076.97740497533).when(iBasicRobotPeer0).getY();
      doReturn((Bullet) null).when(iBasicRobotPeer0).setFire(anyDouble());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent(" ", 2076.97740497533, 1351.18094, 1351.18094, 338.871427393813, 2076.97740497533);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$1757187836 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(0.0).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn(0.0).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(0.0, 0.0).when(iBasicRobotPeer0).getEnergy();
      doReturn(0.0).when(iBasicRobotPeer0).getGunHeading();
      doReturn(0.0, 0.0, 0.0).when(iBasicRobotPeer0).getX();
      doReturn(0.0, 0.0, 0.0).when(iBasicRobotPeer0).getY();
      doReturn((Bullet) null).when(iBasicRobotPeer0).setFire(anyDouble());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", 2076.97740497533, 1351.18094, 1351.18094, 0.0, 2076.97740497533);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$1757187836 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(2076.97740497533).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(2076.97740497533).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn(0.1).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(2076.97740497533, 2775.07469460185).when(iBasicRobotPeer0).getEnergy();
      doReturn(3135.0121736040105).when(iBasicRobotPeer0).getGunHeading();
      doReturn(338.871427393813, 2076.97740497533, 338.871427393813).when(iBasicRobotPeer0).getX();
      doReturn(244.47008330361137, (-1787.10537), (-4162.717503005836)).when(iBasicRobotPeer0).getY();
      doReturn((Bullet) null).when(iBasicRobotPeer0).setFire(anyDouble());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", (-1787.10537), 338.871427393813, 3135.0121736040105, 244.47008330361137, 0.1);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$1757187836 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      Bullet bullet0 = new Bullet(522.87598838, 522.87598838, 1608.48, (-1226.3274228), "", "", false, 1542);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-2682.4)).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(1351.18094).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn(2076.97740497533).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(522.87598838, 522.87598838).when(iBasicRobotPeer0).getEnergy();
      doReturn(2076.97740497533).when(iBasicRobotPeer0).getGunHeading();
      doReturn((-1.0), 142.248843, (-4383.8884)).when(iBasicRobotPeer0).getX();
      doReturn(1608.48, 11.0, 11.0).when(iBasicRobotPeer0).getY();
      doReturn(bullet0).when(iBasicRobotPeer0).setFire(anyDouble());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", 2076.97740497533, 1351.18094, 1351.18094, 0.0, 2076.97740497533);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$1757187836 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      // Undeclared exception!
      try { 
        linearTargeting0.setTurnRadarRightRadians((-18.0));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the setTurnRadarRightRadians() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      Bullet bullet0 = new Bullet((-1411.0), 2538.967835276766, 376.2626513868509, 1.2, "G#C", "", true, 2146843058);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(2076.97740497533).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(53.6324).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn((-2632.76881)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-2217.8908968124), 0.0).when(iBasicRobotPeer0).getEnergy();
      doReturn(0.0).when(iBasicRobotPeer0).getGunHeading();
      doReturn((-2217.8908968124), 0.0, (-43.40877748850202)).when(iBasicRobotPeer0).getX();
      doReturn((-43.40877748850202), (-1411.0), 376.2626513868509).when(iBasicRobotPeer0).getY();
      doReturn(bullet0).when(iBasicRobotPeer0).setFire(anyDouble());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", 2076.97740497533, 1351.18094, 1351.18094, (-1411.0), 2076.97740497533);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$1757187836 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }
}
