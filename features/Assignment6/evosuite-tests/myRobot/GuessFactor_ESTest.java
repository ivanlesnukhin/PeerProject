/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 19 13:12:14 GMT 2019
 */

package myRobot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import myRobot.GuessFactor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import robocode.AdvancedRobot;
import robocode.Bullet;
import robocode.ScannedRobotEvent;
import robocode.robotinterfaces.peer.IBasicRobotPeer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GuessFactor_ESTest extends GuessFactor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(2.0).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(2.0).when(iBasicRobotPeer0).getGunHeading();
      doReturn(2.0).when(iBasicRobotPeer0).getX();
      doReturn(2.0).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, 2.0, 2.0, "robocide.BattleVes6ts");
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", 2986.698656727, (-760.486005045158), (-760.486005045158), 2.0, 2.0, false);
      // Undeclared exception!
      try { 
        guessFactor0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$161852480 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-760.56890674398)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-760.56890674398)).when(iBasicRobotPeer0).getX();
      doReturn((-760.56890674398)).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, (-760.56890674398), (-760.56890674398), "robocode.BattleResults");
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("S(`1>c'`[9FA", 1.0, (-760.56890674398), (-2153.252), 0.0, (-760.56890674398));
      // Undeclared exception!
      try { 
        guessFactor0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 380
         //
         verifyException("myRobot.GFTWave", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((Bullet) null).when(iBasicRobotPeer0).setFire(anyDouble());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, (-760.56890674398), (-760.56890674398), "robocode.BattleResults");
      guessFactor0.setFire((-1908.34));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GuessFactor guessFactor0 = new GuessFactor((AdvancedRobot) null, 0.0, 0.0, "Vg\"l'WB sfA:P\"");
      // Undeclared exception!
      try { 
        guessFactor0.setTurnRadarRightRadians(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("myRobot.GuessFactor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, (-1072.982), 0.0, "");
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      // Undeclared exception!
      try { 
        guessFactor0.setTurnRadarRightRadians(0.0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$161852480 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GuessFactor guessFactor0 = new GuessFactor((AdvancedRobot) null, 0.0, 0.0, "");
      // Undeclared exception!
      try { 
        guessFactor0.setTurnGunRightRadians(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("myRobot.GuessFactor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, (-1072.982), (-11.077598186704767), "");
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      advancedRobot0.setPeer(iBasicRobotPeer0);
      // Undeclared exception!
      try { 
        guessFactor0.setTurnGunRightRadians((-11.077598186704767));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$161852480 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GuessFactor guessFactor0 = new GuessFactor((AdvancedRobot) null, (-3567.0), (-3567.0), "");
      // Undeclared exception!
      try { 
        guessFactor0.setFire((-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("myRobot.GuessFactor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, (-4527.175956), (-4527.175956), "");
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      // Undeclared exception!
      try { 
        guessFactor0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getHeadingRadians() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GuessFactor guessFactor0 = new GuessFactor((AdvancedRobot) null, (-1.0), 918.2704459923392, "");
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", 918.2704459923392, 1058.5, (-1.0), 1058.5, 3199.300856551);
      // Undeclared exception!
      try { 
        guessFactor0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("myRobot.GuessFactor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(2.0).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(2.0).when(iBasicRobotPeer0).getGunHeading();
      doReturn(2.0).when(iBasicRobotPeer0).getX();
      doReturn(2.0).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, 2.0, 2.0, "{j");
      // Undeclared exception!
      try { 
        guessFactor0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$161852480 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, (-1072.982), 0.0, "");
      // Undeclared exception!
      try { 
        guessFactor0.setTurnRadarRightRadians(0.0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the setTurnRadarRightRadians() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, (-4343.520914416076), (-4343.520914416076), "f|.}e&XzmlpYpB%");
      // Undeclared exception!
      try { 
        guessFactor0.setFire(3.141592653589793);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the setFire() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      GuessFactor guessFactor0 = new GuessFactor(advancedRobot0, (-1072.982), (-11.077598186704767), "");
      // Undeclared exception!
      try { 
        guessFactor0.setTurnGunRightRadians((-11.077598186704767));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the setTurnGunRightRadians() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }
}
